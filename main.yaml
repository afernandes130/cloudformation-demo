Parameters:
  VPCCIRD:
    Type: String
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
    ConstraintDescription: "IP para o VPC invalido."
    Description: "Defina um range de IP valido para o VPC."
  AMBIENTE:
    Type: String
    Description: "Defina nome do ambiente para qual a stack sera criada."

Resources:
  VpcCurso:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIRD
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Join
                  - ''
                  - - 'vpccomric-'
                    - !Ref AMBIENTE

#   SubnetA:
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VpcCurso
#       CidrBlock: 10.0.1.0/24

#   SubnetB:
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VpcCurso
#       CidrBlock: 10.0.2.0/24

#   SubnetC:
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VpcCurso
#       CidrBlock: 10.0.3.0/24
    
#   InternetGateway:
#     Type: AWS::EC2::InternetGateway
  
#   VPCGatewayAttachment:
#     Type: AWS::EC2::VPCGatewayAttachment
#     Properties:
#       VpcId: !Ref VpcCurso
#       InternetGatewayId: !Ref InternetGateway

#   RouteTable:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcCurso

#   Route:
#     Type: AWS::EC2::Route
#     DependsOn: InternetGateway
#     Properties:
#       RouteTableId: !Ref RouteTable
#       DestinationCidrBlock: 0.0.0.0/0
#       GatewayId: !Ref InternetGateway
      
#   SubnetRouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref RouteTable
#       SubnetId: !Ref SubnetA

  # InstanceZA:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     ImageId: ami-0c2d06d50ce30b442
  #     InstanceType: t3.micro
  #     SubnetId: !Ref SubnetA

  # TopicoSns:
  #   Type: AWS::SNS::Topic
  #   Properties:
  #     Subscription:
  #       - Endpoint: "afernandes130@hotmail.com"
  #         Protocol: email
  #     TopicName: "TopicoSns"

  # Bucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     AccessControl: Private
  #     BucketName: s3bucket-adriano
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: Glacier
  #           Prefix: relatorio
  #           Status: Enabled
  #           ExpirationInDays: 365
  #           Transitions:
  #             - StorageClass: GLACIER
  #               TransitionInDays: 1

  # SecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Libera porta 22
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: '22'
  #         ToPort: '22'
  #         CidrIp: 0.0.0.0/0
  #     VpcId: !Ref VpcCurso

# Outputs:
#   Bucket:
#     Value: !Ref Bucket
#   StackName:
#     Value: !Ref AWS::StackName
#   StackId:
#     Value: !Ref AWS::StackId
#   Region:
#     Value: !Ref AWS::Region

